{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"RepositoryDetails\",\n  props: {\n    repo: Object\n  },\n  data() {\n    return {\n      issues: [],\n      errorMessage: null\n    };\n  },\n  created() {\n    this.fetchIssues();\n  },\n  methods: {\n    async fetchIssues() {\n      try {\n        if (this.repo && this.repo.full_name) {\n          const response = await axios.get(`https://api.github.com/repos/${this.repo.full_name}/issues`);\n          this.issues = response.data;\n        } else {\n          this.errorMessage = \"Repositório não encontrado.\";\n        }\n      } catch (error) {\n        this.errorMessage = \"Erro ao buscar issues.\";\n        console.error(\"Erro ao buscar issues:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","repo","Object","data","issues","errorMessage","created","fetchIssues","methods","full_name","response","get","error","console"],"sources":["src/components/RepositoryDetails.vue"],"sourcesContent":["<!-- src/views/RepositoryDetailsView.vue -->\r\n<template>\r\n  <div class=\"repository-details\" v-if=\"repo\">\r\n    <div class=\"repository-header\">\r\n      <img :src=\"repo.owner.avatar_url\" alt=\"Repo Avatar\" class=\"repo-avatar\" />\r\n      <div class=\"repository-info\">\r\n        <h1>{{ repo.name }}</h1>\r\n        <p>{{ repo.description }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"repository-kpis\">\r\n      <div class=\"kpi\">\r\n        <h2>{{ repo.stargazers_count }}</h2>\r\n        <p>Stars</p>\r\n      </div>\r\n      <div class=\"kpi\">\r\n        <h2>{{ repo.forks_count }}</h2>\r\n        <p>Forks</p>\r\n      </div>\r\n      <div class=\"kpi\">\r\n        <h2>{{ repo.open_issues_count }}</h2>\r\n        <p>Issues</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"issue-list\">\r\n      <div v-for=\"issue in issues\" :key=\"issue.id\" class=\"issue-card\">\r\n        <a :href=\"issue.html_url\" target=\"_blank\" class=\"issue-link\">\r\n          <div class=\"issue-info\">\r\n            <h3>{{ issue.title }}</h3>\r\n            <p>{{ issue.body }}</p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <p v-else>Loading...</p>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"RepositoryDetails\",\r\n  props: {\r\n    repo: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      issues: [],\r\n      errorMessage: null,\r\n    };\r\n  },\r\n  created() {\r\n    this.fetchIssues();\r\n  },\r\n  methods: {\r\n    async fetchIssues() {\r\n      try {\r\n        if (this.repo && this.repo.full_name) {\r\n          const response = await axios.get(\r\n            `https://api.github.com/repos/${this.repo.full_name}/issues`\r\n          );\r\n          this.issues = response.data;\r\n        } else {\r\n          this.errorMessage = \"Repositório não encontrado.\";\r\n        }\r\n      } catch (error) {\r\n        this.errorMessage = \"Erro ao buscar issues.\";\r\n        console.error(\"Erro ao buscar issues:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.repository-details {\r\n  padding: 20px;\r\n  margin-left: 14%;\r\n  margin-top: 50px;\r\n}\r\n\r\n.repository-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.repo-avatar {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px; /* Espaçamento entre o avatar e o texto */\r\n}\r\n\r\n.repository-info {\r\n  flex: 1;\r\n}\r\n\r\n.repository-kpis {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kpi {\r\n  text-align: center;\r\n  flex: 1; /* Faz com que todas as KPIs ocupem o mesmo espaço */\r\n}\r\n\r\n.issue-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.issue-card {\r\n  background-color: var(--background-color);\r\n  border: 1px solid var(--border-color);\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-bottom: 10px;\r\n  box-sizing: border-box;\r\n  overflow: hidden; /* Garantir que o conteúdo fique dentro do card */\r\n}\r\n\r\n.issue-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nh3,\r\np {\r\n  margin: 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; /* Adiciona \"...\" quando o texto for muito longo */\r\n  white-space: nowrap; /* Impede que o texto quebre em várias linhas */\r\n}\r\n\r\nh3 {\r\n  font-size: 1.1em;\r\n  margin-bottom: 5px;\r\n}\r\n\r\np {\r\n  font-size: 0.9em;\r\n  color: var(--text-color);\r\n  max-height: 2.5em; /* Limita a altura da descrição */\r\n}\r\n\r\n.issue-link {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\n.issue-card:hover {\r\n  background-color: var(--hover-background-color);\r\n}\r\n</style>\r\n"],"mappings":"AAuCA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,MAAA;MACAC,YAAA;IACA;EACA;EACAC,QAAA;IACA,KAAAC,WAAA;EACA;EACAC,OAAA;IACA,MAAAD,YAAA;MACA;QACA,SAAAN,IAAA,SAAAA,IAAA,CAAAQ,SAAA;UACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,GAAA,CACA,qCAAAV,IAAA,CAAAQ,SAAA,SACA;UACA,KAAAL,MAAA,GAAAM,QAAA,CAAAP,IAAA;QACA;UACA,KAAAE,YAAA;QACA;MACA,SAAAO,KAAA;QACA,KAAAP,YAAA;QACAQ,OAAA,CAAAD,KAAA,2BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}