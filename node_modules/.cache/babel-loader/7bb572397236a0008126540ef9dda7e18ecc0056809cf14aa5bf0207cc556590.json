{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"RepositoryDetails\",\n  props: {\n    repo: Object\n  },\n  data() {\n    return {\n      issues: [],\n      repo: {}\n    };\n  },\n  async created() {\n    const fullRepoName = this.$route.params.repoName;\n    try {\n      const response = await axios.get(`https://api.github.com/repos/${fullRepoName}`);\n      this.repo = {\n        name: response.data.full_name,\n        avatar: response.data.owner.avatar_url,\n        description: response.data.description,\n        stars: response.data.stargazers_count,\n        forks: response.data.forks_count,\n        openIssues: response.data.open_issues_count\n      };\n      this.fetchIssues(); // Chama o fetchIssues após repo ser definido\n    } catch (error) {\n      console.error(\"Erro ao buscar detalhes do repositório:\", error);\n    }\n  },\n  methods: {\n    async fetchIssues() {\n      if (!this.repo || !this.repo.name) return;\n      try {\n        const response = await axios.get(`https://api.github.com/repos/${this.repo.name}/issues`);\n        this.issues = response.data;\n      } catch (error) {\n        console.error(\"Erro ao buscar issues:\", error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","repo","Object","data","issues","created","fullRepoName","$route","params","repoName","response","get","full_name","avatar","owner","avatar_url","description","stars","stargazers_count","forks","forks_count","openIssues","open_issues_count","fetchIssues","error","console","methods"],"sources":["src/components/RepositoryDetails.vue"],"sourcesContent":["<template>\r\n  <div class=\"repository-details\">\r\n    <div class=\"repository-header\">\r\n      <img :src=\"repo.avatar\" alt=\"Repository Avatar\" class=\"avatar\" />\r\n      <div class=\"repository-info\">\r\n        <h1>{{ repo.name }}</h1>\r\n        <p>{{ repo.description }}</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"repository-kpis\">\r\n      <div class=\"kpi\">\r\n        <h2>{{ repo.stars }}</h2>\r\n        <p>Stars</p>\r\n      </div>\r\n      <div class=\"kpi\">\r\n        <h2>{{ repo.forks }}</h2>\r\n        <p>Forks</p>\r\n      </div>\r\n      <div class=\"kpi\">\r\n        <h2>{{ repo.openIssues }}</h2>\r\n        <p>Issues</p>\r\n      </div>\r\n    </div>\r\n    <div class=\"issue-list\">\r\n      <div v-for=\"issue in issues\" :key=\"issue.id\" class=\"issue-card\">\r\n        <a :href=\"issue.html_url\" target=\"_blank\" class=\"issue-link\">\r\n          <div class=\"issue-info\">\r\n            <h3>{{ issue.title }}</h3>\r\n            <p>{{ issue.body }}</p>\r\n          </div>\r\n        </a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"RepositoryDetails\",\r\n  props: {\r\n    repo: Object,\r\n  },\r\n  data() {\r\n    return {\r\n      issues: [],\r\n      repo: {}\r\n    };\r\n  },\r\n  async created() {\r\n    const fullRepoName = this.$route.params.repoName;\r\n\r\n    try {\r\n      const response = await axios.get(\r\n        `https://api.github.com/repos/${fullRepoName}`\r\n      );\r\n      this.repo = {\r\n        name: response.data.full_name,\r\n        avatar: response.data.owner.avatar_url,\r\n        description: response.data.description,\r\n        stars: response.data.stargazers_count,\r\n        forks: response.data.forks_count,\r\n        openIssues: response.data.open_issues_count,\r\n      };\r\n      this.fetchIssues(); // Chama o fetchIssues após repo ser definido\r\n    } catch (error) {\r\n      console.error(\"Erro ao buscar detalhes do repositório:\", error);\r\n    }\r\n  },\r\n  methods: {\r\n    async fetchIssues() {\r\n      if (!this.repo || !this.repo.name) return;\r\n      try {\r\n        const response = await axios.get(\r\n          `https://api.github.com/repos/${this.repo.name}/issues`\r\n        );\r\n        this.issues = response.data;\r\n      } catch (error) {\r\n        console.error(\"Erro ao buscar issues:\", error);\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n\r\n<style scoped>\r\n.repository-details {\r\n  padding: 20px;\r\n  margin-left: 14%;\r\n  margin-top: 50px;\r\n}\r\n\r\n.repository-header {\r\n  display: flex;\r\n  align-items: center;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.avatar {\r\n  width: 100px;\r\n  height: 100px;\r\n  border-radius: 50%;\r\n  margin-right: 20px; /* Espaçamento entre o avatar e o texto */\r\n}\r\n\r\n.repository-info {\r\n  flex: 1;\r\n}\r\n\r\n.repository-kpis {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  margin-bottom: 20px;\r\n}\r\n\r\n.kpi {\r\n  text-align: center;\r\n  flex: 1; /* Faz com que todas as KPIs ocupem o mesmo espaço */\r\n}\r\n\r\n.issue-list {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  gap: 20px;\r\n}\r\n\r\n.issue-card {\r\n  background-color: var(--background-color);\r\n  border: 1px solid var(--border-color);\r\n  padding: 10px;\r\n  border-radius: 5px;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  margin-bottom: 10px;\r\n  box-sizing: border-box;\r\n  overflow: hidden; /* Garantir que o conteúdo fique dentro do card */\r\n}\r\n\r\n.issue-info {\r\n  display: flex;\r\n  flex-direction: column;\r\n}\r\n\r\nh3,\r\np {\r\n  margin: 0;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis; /* Adiciona \"...\" quando o texto for muito longo */\r\n  white-space: nowrap; /* Impede que o texto quebre em várias linhas */\r\n}\r\n\r\nh3 {\r\n  font-size: 1.1em;\r\n  margin-bottom: 5px;\r\n}\r\n\r\np {\r\n  font-size: 0.9em;\r\n  color: var(--text-color);\r\n  max-height: 2.5em; /* Limita a altura da descrição */\r\n}\r\n\r\n.issue-link {\r\n  text-decoration: none;\r\n  color: inherit;\r\n}\r\n\r\n.issue-card:hover {\r\n  background-color: var(--hover-background-color);\r\n}\r\n</style>\r\n"],"mappings":"AAqCA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,IAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,MAAA;MACAH,IAAA;IACA;EACA;EACA,MAAAI,QAAA;IACA,MAAAC,YAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,QAAA;IAEA;MACA,MAAAC,QAAA,SAAAZ,KAAA,CAAAa,GAAA,CACA,gCAAAL,YAAA,EACA;MACA,KAAAL,IAAA;QACAF,IAAA,EAAAW,QAAA,CAAAP,IAAA,CAAAS,SAAA;QACAC,MAAA,EAAAH,QAAA,CAAAP,IAAA,CAAAW,KAAA,CAAAC,UAAA;QACAC,WAAA,EAAAN,QAAA,CAAAP,IAAA,CAAAa,WAAA;QACAC,KAAA,EAAAP,QAAA,CAAAP,IAAA,CAAAe,gBAAA;QACAC,KAAA,EAAAT,QAAA,CAAAP,IAAA,CAAAiB,WAAA;QACAC,UAAA,EAAAX,QAAA,CAAAP,IAAA,CAAAmB;MACA;MACA,KAAAC,WAAA;IACA,SAAAC,KAAA;MACAC,OAAA,CAAAD,KAAA,4CAAAA,KAAA;IACA;EACA;EACAE,OAAA;IACA,MAAAH,YAAA;MACA,UAAAtB,IAAA,UAAAA,IAAA,CAAAF,IAAA;MACA;QACA,MAAAW,QAAA,SAAAZ,KAAA,CAAAa,GAAA,CACA,qCAAAV,IAAA,CAAAF,IAAA,SACA;QACA,KAAAK,MAAA,GAAAM,QAAA,CAAAP,IAAA;MACA,SAAAqB,KAAA;QACAC,OAAA,CAAAD,KAAA,2BAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}