{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from 'axios';\nimport SearchComponent from './components/SearchComponent.vue';\nimport RepositoryList from './components/RepositoryList.vue';\nimport RepositoryDetails from './components/RepositoryDetails.vue';\nexport default {\n  name: 'App',\n  components: {\n    SearchComponent,\n    RepositoryList,\n    RepositoryDetails\n  },\n  data() {\n    return {\n      repositories: [],\n      selectedRepository: null,\n      darkMode: JSON.parse(localStorage.getItem('darkMode')) || false,\n      errorMessage: null\n    };\n  },\n  methods: {\n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n      localStorage.setItem('darkMode', JSON.stringify(this.darkMode));\n    },\n    async fetchRepositories(query) {\n      this.errorMessage = null;\n      try {\n        const response = await axios.get(`https://api.github.com/search/repositories?q=${query}`);\n        this.repositories = response.data.items;\n        if (this.repositories.length === 0) {\n          this.errorMessage = 'Nenhum repositório encontrado para essa busca.';\n        }\n      } catch (error) {\n        this.errorMessage = 'Erro ao buscar repositórios. Por favor, tente novamente mais tarde.';\n        console.error('Erro ao buscar repositórios:', error);\n      }\n    },\n    showRepositoryDetails(repo) {\n      const currentRoute = this.$router.currentRoute;\n      const newRoute = `/details/${repo.full_name}`;\n      if (currentRoute.path !== newRoute) {\n        this.selectedRepository = repo;\n        this.$router.push(newRoute);\n      }\n    },\n    goBack() {\n      this.selectedRepository = null;\n      if (this.$router.currentRoute.path !== '/') {\n        this.$router.push('/');\n      }\n    },\n    loadFromLocalStorage() {\n      const storedRepos = JSON.parse(localStorage.getItem('repositories'));\n      if (storedRepos) {\n        this.repositories = storedRepos;\n      }\n    }\n  },\n  created() {\n    this.loadFromLocalStorage();\n  }\n};","map":{"version":3,"names":["axios","SearchComponent","RepositoryList","RepositoryDetails","name","components","data","repositories","selectedRepository","darkMode","JSON","parse","localStorage","getItem","errorMessage","methods","toggleDarkMode","setItem","stringify","fetchRepositories","query","response","get","items","length","error","console","showRepositoryDetails","repo","currentRoute","$router","newRoute","full_name","path","push","goBack","loadFromLocalStorage","storedRepos","created"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" :class=\"{'dark-mode': darkMode, 'app-background': true}\">\r\n    <header class=\"header\">\r\n      <img :src=\"darkMode ? require('./assets/logo-dark.svg') : require('./assets/logo.svg')\" alt=\"Logo\" class=\"header-logo\" />\r\n      <button @click=\"toggleDarkMode\" class=\"header-dark-mode-button\">\r\n        {{ darkMode ? \"Desativar Modo Dark\" : \"Ativar Modo Dark\" }}\r\n      </button>\r\n      <button v-if=\"selectedRepository\" @click=\"goBack\" class=\"back-button\">Voltar</button>\r\n    </header>\r\n\r\n    <SearchComponent v-if=\"!selectedRepository\" @search=\"fetchRepositories\" :errorMessage=\"errorMessage\"/>\r\n    <RepositoryList v-if=\"!selectedRepository && repositories.length\" :repos=\"repositories\" @repository-selected=\"showRepositoryDetails\" />\r\n    <RepositoryDetails v-if=\"selectedRepository\" :repo=\"selectedRepository\" @go-back=\"goBack\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport SearchComponent from './components/SearchComponent.vue';\r\nimport RepositoryList from './components/RepositoryList.vue';\r\nimport RepositoryDetails from './components/RepositoryDetails.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    SearchComponent,\r\n    RepositoryList,\r\n    RepositoryDetails,\r\n  },\r\n  data() {\r\n    return {\r\n      repositories: [],\r\n      selectedRepository: null,\r\n      darkMode: JSON.parse(localStorage.getItem('darkMode')) || false,\r\n      errorMessage: null,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDarkMode() {\r\n      this.darkMode = !this.darkMode;\r\n      localStorage.setItem('darkMode', JSON.stringify(this.darkMode));\r\n    },\r\n    async fetchRepositories(query) {\r\n      this.errorMessage = null;\r\n      try {\r\n        const response = await axios.get(`https://api.github.com/search/repositories?q=${query}`);\r\n        this.repositories = response.data.items;\r\n        if (this.repositories.length === 0) {\r\n          this.errorMessage = 'Nenhum repositório encontrado para essa busca.';\r\n        }\r\n      } catch (error) {\r\n        this.errorMessage = 'Erro ao buscar repositórios. Por favor, tente novamente mais tarde.';\r\n        console.error('Erro ao buscar repositórios:', error);\r\n      }\r\n    },\r\n    showRepositoryDetails(repo) {\r\n      const currentRoute = this.$router.currentRoute;\r\n      const newRoute = `/details/${repo.full_name}`;\r\n      if (currentRoute.path !== newRoute) {\r\n        this.selectedRepository = repo;\r\n        this.$router.push(newRoute);\r\n      }\r\n    },\r\n    goBack() {\r\n      this.selectedRepository = null;\r\n      if (this.$router.currentRoute.path !== '/') {\r\n        this.$router.push('/');\r\n      }\r\n    },\r\n    loadFromLocalStorage() {\r\n      const storedRepos = JSON.parse(localStorage.getItem('repositories'));\r\n      if (storedRepos) {\r\n        this.repositories = storedRepos;\r\n      }\r\n    }\r\n  },\r\n  created() {\r\n    this.loadFromLocalStorage();\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n/* Estilos omitidos para brevidade */\r\n</style>\r\n\r\n\r\n  \r\n<style scoped>\r\n.app-background {\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: top;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 20px;\r\n  color: var(--title-color);\r\n  background-color: var(--background-color); /* Use a variável para a cor de fundo */\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n/* Estilos para o modo escuro */\r\n.dark-mode .app-background {\r\n  background-image: none;\r\n  background-color: var(--background-color);\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.header {\r\n  transition: background-color 0.3s;\r\n  background-color: var(--background-color);\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.header-logo {\r\n  max-width: 150px;\r\n  height: auto;\r\n}\r\n\r\n.header-title {\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  color: var(--title-color);\r\n}\r\n\r\n.header-dark-mode-button {\r\n  transition: background-color 0.3s;\r\n  padding: 5px;\r\n  background-color: var(--button-color);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  color: var(--text-color);\r\n}\r\n\r\n.header-dark-mode-button:hover {\r\n  background-color: var(--button-hover-color);\r\n}\r\n\r\n.back-button {\r\n  padding: 5px;\r\n  background-color: var(--button-color);\r\n  border: 1px solid var(--border-color);\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  color: var(--text-color);\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: var(--button-hover-color);\r\n}\r\n</style>\r\n"],"mappings":";AAiBA,OAAAA,KAAA;AACA,OAAAC,eAAA;AACA,OAAAC,cAAA;AACA,OAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,eAAA;IACAC,cAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,YAAA;MACAC,kBAAA;MACAC,QAAA,EAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACAC,YAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,KAAAP,QAAA,SAAAA,QAAA;MACAG,YAAA,CAAAK,OAAA,aAAAP,IAAA,CAAAQ,SAAA,MAAAT,QAAA;IACA;IACA,MAAAU,kBAAAC,KAAA;MACA,KAAAN,YAAA;MACA;QACA,MAAAO,QAAA,SAAArB,KAAA,CAAAsB,GAAA,iDAAAF,KAAA;QACA,KAAAb,YAAA,GAAAc,QAAA,CAAAf,IAAA,CAAAiB,KAAA;QACA,SAAAhB,YAAA,CAAAiB,MAAA;UACA,KAAAV,YAAA;QACA;MACA,SAAAW,KAAA;QACA,KAAAX,YAAA;QACAY,OAAA,CAAAD,KAAA,iCAAAA,KAAA;MACA;IACA;IACAE,sBAAAC,IAAA;MACA,MAAAC,YAAA,QAAAC,OAAA,CAAAD,YAAA;MACA,MAAAE,QAAA,eAAAH,IAAA,CAAAI,SAAA;MACA,IAAAH,YAAA,CAAAI,IAAA,KAAAF,QAAA;QACA,KAAAvB,kBAAA,GAAAoB,IAAA;QACA,KAAAE,OAAA,CAAAI,IAAA,CAAAH,QAAA;MACA;IACA;IACAI,OAAA;MACA,KAAA3B,kBAAA;MACA,SAAAsB,OAAA,CAAAD,YAAA,CAAAI,IAAA;QACA,KAAAH,OAAA,CAAAI,IAAA;MACA;IACA;IACAE,qBAAA;MACA,MAAAC,WAAA,GAAA3B,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;MACA,IAAAwB,WAAA;QACA,KAAA9B,YAAA,GAAA8B,WAAA;MACA;IACA;EACA;EACAC,QAAA;IACA,KAAAF,oBAAA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}