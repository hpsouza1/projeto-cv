{"ast":null,"code":"import axios from 'axios';\nexport default {\n  name: 'IssueList',\n  props: {\n    repoName: String\n  },\n  data() {\n    return {\n      issues: []\n    };\n  },\n  async created() {\n    try {\n      const response = await axios.get(`https://api.github.com/repos/${this.repoName}/issues`);\n      this.issues = response.data;\n    } catch (error) {\n      console.error('Erro ao buscar issues:', error);\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","repoName","String","data","issues","created","response","get","error","console"],"sources":["src/components/IssueList.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h3>Issues</h3>\r\n      <div v-for=\"issue in issues\" :key=\"issue.id\" class=\"issue-card\">\r\n        <a :href=\"issue.html_url\" target=\"_blank\">{{ issue.title }}</a>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    name: 'IssueList',\r\n    props: {\r\n      repoName: String,\r\n    },\r\n    data() {\r\n      return {\r\n        issues: [],\r\n      };\r\n    },\r\n    async created() {\r\n      try {\r\n        const response = await axios.get(`https://api.github.com/repos/${this.repoName}/issues`);\r\n        this.issues = response.data;\r\n      } catch (error) {\r\n        console.error('Erro ao buscar issues:', error);\r\n      }\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .issue-card {\r\n    border: 1px solid #ccc;\r\n    padding: 10px;\r\n    margin: 5px 0;\r\n    border-radius: 4px;\r\n    background-color: #f9f9f9;\r\n    transition: background-color 0.3s;\r\n  }\r\n  \r\n  .issue-card:hover {\r\n    background-color: #e9e9e9;\r\n  }\r\n  </style>\r\n  "],"mappings":"AAUA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACAC,QAAA,EAAAC;EACA;EACAC,KAAA;IACA;MACAC,MAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA;MACA,MAAAC,QAAA,SAAAR,KAAA,CAAAS,GAAA,sCAAAN,QAAA;MACA,KAAAG,MAAA,GAAAE,QAAA,CAAAH,IAAA;IACA,SAAAK,KAAA;MACAC,OAAA,CAAAD,KAAA,2BAAAA,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}