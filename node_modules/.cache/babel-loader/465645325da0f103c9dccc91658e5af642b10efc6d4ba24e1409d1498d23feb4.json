{"ast":null,"code":"import axios from 'axios';\nimport SearchComponent from './components/SearchComponent.vue';\nimport RepositoryList from './components/RepositoryList.vue';\nimport RepositoryDetails from './components/RepositoryDetails.vue';\nexport default {\n  name: 'App',\n  components: {\n    SearchComponent,\n    RepositoryList,\n    RepositoryDetails\n  },\n  data() {\n    return {\n      repositories: [],\n      selectedRepository: null,\n      darkMode: false\n    };\n  },\n  methods: {\n    toggleDarkMode() {\n      this.darkMode = !this.darkMode;\n    },\n    async fetchRepositories(query) {\n      try {\n        const response = await axios.get(`https://api.github.com/search/repositories?q=${query}`);\n        this.repositories = response.data.items.map(repo => ({\n          id: repo.id,\n          name: repo.full_name,\n          description: repo.description,\n          avatar: repo.owner.avatar_url,\n          stars: repo.stargazers_count,\n          forks: repo.forks,\n          openIssues: repo.open_issues\n        }));\n      } catch (error) {\n        console.error('Erro ao buscar repositórios:', error);\n      }\n    },\n    showRepositoryDetails(repo) {\n      this.selectedRepository = repo;\n    },\n    goBack() {\n      this.selectedRepository = null;\n    }\n  }\n};","map":{"version":3,"names":["axios","SearchComponent","RepositoryList","RepositoryDetails","name","components","data","repositories","selectedRepository","darkMode","methods","toggleDarkMode","fetchRepositories","query","response","get","items","map","repo","id","full_name","description","avatar","owner","avatar_url","stars","stargazers_count","forks","openIssues","open_issues","error","console","showRepositoryDetails","goBack"],"sources":["src/App.vue"],"sourcesContent":["<template>\r\n  <div id=\"app\" :class=\"{'dark-mode': darkMode, 'app-background': true}\">\r\n    <header class=\"header\">\r\n      <img :src=\"darkMode ? require('./assets/logo-dark.svg') : require('./assets/logo.svg')\" alt=\"Logo\" class=\"header-logo\" />\r\n      <button @click=\"toggleDarkMode\" class=\"header-dark-mode-button\">\r\n        {{ darkMode ? \"Desativar Modo Dark\" : \"Ativar Modo Dark\" }}\r\n      </button>\r\n      <button v-if=\"selectedRepository\" @click=\"goBack\" class=\"back-button\">Voltar</button>\r\n    </header>\r\n\r\n    <SearchComponent v-if=\"!selectedRepository\" @search=\"fetchRepositories\" />\r\n    <RepositoryList v-if=\"!selectedRepository && repositories.length\" :repos=\"repositories\" @repository-selected=\"showRepositoryDetails\" />\r\n    <RepositoryDetails v-if=\"selectedRepository\" :repo=\"selectedRepository\" @go-back=\"goBack\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport SearchComponent from './components/SearchComponent.vue';\r\nimport RepositoryList from './components/RepositoryList.vue';\r\nimport RepositoryDetails from './components/RepositoryDetails.vue';\r\n\r\nexport default {\r\n  name: 'App',\r\n  components: {\r\n    SearchComponent,\r\n    RepositoryList,\r\n    RepositoryDetails,\r\n  },\r\n  data() {\r\n    return {\r\n      repositories: [],\r\n      selectedRepository: null,\r\n      darkMode: false,\r\n    };\r\n  },\r\n  methods: {\r\n    toggleDarkMode() {\r\n      this.darkMode = !this.darkMode;\r\n    },\r\n    async fetchRepositories(query) {\r\n      try {\r\n        const response = await axios.get(`https://api.github.com/search/repositories?q=${query}`);\r\n        this.repositories = response.data.items.map(repo => ({\r\n          id: repo.id,\r\n          name: repo.full_name,\r\n          description: repo.description,\r\n          avatar: repo.owner.avatar_url,\r\n          stars: repo.stargazers_count,\r\n          forks: repo.forks,\r\n          openIssues: repo.open_issues,\r\n        }));\r\n      } catch (error) {\r\n        console.error('Erro ao buscar repositórios:', error);\r\n      }\r\n    },\r\n    showRepositoryDetails(repo) {\r\n      this.selectedRepository = repo;\r\n    },\r\n    goBack() {\r\n      this.selectedRepository = null;\r\n    },\r\n  },\r\n};\r\n</script>\r\n  \r\n<style scoped>\r\n.app-background {\r\n  background-image: url(\"./assets/github-background.svg\");\r\n  background-size: 50%;\r\n  background-repeat: no-repeat;\r\n  background-position: right;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  justify-content: top;\r\n  align-items: flex-start;\r\n  flex-direction: column;\r\n  padding: 20px; /* Espaçamento das bordas */\r\n  color: var(--title-color);\r\n}\r\n\r\n/* Estilos para o modo escuro */\r\n.dark-mode .app-background {\r\n  background-image: none; /* Remove a imagem de fundo */\r\n  background-color: #1a1a1a;\r\n}\r\n\r\n.header {\r\n  background-color: var(--header-background-color);\r\n  padding: 10px;\r\n  display: flex;\r\n  justify-content: space-evenly; /* Ajustando a posição dos elementos */\r\n  align-items: center;\r\n  width: 100%;\r\n}\r\n\r\n.header-logo {\r\n  max-width: 150px;\r\n  height: auto;\r\n}\r\n\r\n.header-title {\r\n  margin: 0;\r\n  font-size: 1.5rem;\r\n  color: var(--title-color);\r\n}\r\n\r\n.header-dark-mode-button {\r\n  padding: 5px;\r\n  background-color: var(--button-color);\r\n  border: 1px black none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  color: var(--text-color);\r\n}\r\n\r\n.header-dark-mode-button:hover {\r\n  background-color: var(--button-hover-color); /* Cor do botão ao passar o mouse */\r\n}\r\n\r\n.back-button {\r\n  padding: 5px;\r\n  background-color: var(--button-color);\r\n  border: 1px black none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  cursor: pointer;\r\n  color: var(--text-color);\r\n}\r\n\r\n.back-button:hover {\r\n  background-color: var(--button-hover-color); /* Cor do botão ao passar o mouse */\r\n}\r\n</style>\r\n"],"mappings":"AAiBA,OAAAA,KAAA;AACA,OAAAC,eAAA;AACA,OAAAC,cAAA;AACA,OAAAC,iBAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAJ,eAAA;IACAC,cAAA;IACAC;EACA;EACAG,KAAA;IACA;MACAC,YAAA;MACAC,kBAAA;MACAC,QAAA;IACA;EACA;EACAC,OAAA;IACAC,eAAA;MACA,KAAAF,QAAA,SAAAA,QAAA;IACA;IACA,MAAAG,kBAAAC,KAAA;MACA;QACA,MAAAC,QAAA,SAAAd,KAAA,CAAAe,GAAA,iDAAAF,KAAA;QACA,KAAAN,YAAA,GAAAO,QAAA,CAAAR,IAAA,CAAAU,KAAA,CAAAC,GAAA,CAAAC,IAAA;UACAC,EAAA,EAAAD,IAAA,CAAAC,EAAA;UACAf,IAAA,EAAAc,IAAA,CAAAE,SAAA;UACAC,WAAA,EAAAH,IAAA,CAAAG,WAAA;UACAC,MAAA,EAAAJ,IAAA,CAAAK,KAAA,CAAAC,UAAA;UACAC,KAAA,EAAAP,IAAA,CAAAQ,gBAAA;UACAC,KAAA,EAAAT,IAAA,CAAAS,KAAA;UACAC,UAAA,EAAAV,IAAA,CAAAW;QACA;MACA,SAAAC,KAAA;QACAC,OAAA,CAAAD,KAAA,iCAAAA,KAAA;MACA;IACA;IACAE,sBAAAd,IAAA;MACA,KAAAV,kBAAA,GAAAU,IAAA;IACA;IACAe,OAAA;MACA,KAAAzB,kBAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}