{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport RepositoryDetails from '@/components/RepositoryDetails.vue';\nimport axios from 'axios';\nexport default {\n  name: 'RepositoryDetailsView',\n  components: {\n    RepositoryDetails\n  },\n  data() {\n    return {\n      repository: null,\n      issues: [],\n      errorMessage: null\n    };\n  },\n  async created() {\n    const repoId = this.$route.params.id;\n    const storedRepositories = JSON.parse(localStorage.getItem('repositories')) || [];\n    this.repository = storedRepositories.find(repo => repo.id === Number(repoId));\n    if (!this.repository) {\n      try {\n        const response = await axios.get(`https://api.github.com/repositories/${repoId}`);\n        this.repository = response.data;\n\n        // Adiciona o novo repositório ao localStorage\n        storedRepositories.push(this.repository);\n        localStorage.setItem('repositories', JSON.stringify(storedRepositories));\n      } catch (error) {\n        console.error('Erro ao buscar o repositório:', error);\n      }\n    }\n  }\n};","map":{"version":3,"names":["RepositoryDetails","axios","name","components","data","repository","issues","errorMessage","created","repoId","$route","params","id","storedRepositories","JSON","parse","localStorage","getItem","find","repo","Number","response","get","push","setItem","stringify","error","console"],"sources":["src/views/RepositoryDetailsView.vue"],"sourcesContent":["<!-- src/views/RepositoryDetailsView.vue -->\r\n<template>\r\n  <div>\r\n    <p v-if=\"!repository\">Repositório não encontrado ou carregando...</p>\r\n    <RepositoryDetails v-if=\"repository\" :repo=\"repository\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport RepositoryDetails from '@/components/RepositoryDetails.vue';\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'RepositoryDetailsView',\r\n  components: {\r\n    RepositoryDetails,\r\n  },\r\n  data() {\r\n    return {\r\n      repository: null,\r\n      issues: [],\r\n      errorMessage: null,\r\n    };\r\n  },\r\n  async created() {\r\n    const repoId = this.$route.params.id;\r\n    const storedRepositories = JSON.parse(localStorage.getItem('repositories')) || [];\r\n    this.repository = storedRepositories.find(repo => repo.id === Number(repoId));\r\n    \r\n    if (!this.repository) {\r\n      try {\r\n        const response = await axios.get(`https://api.github.com/repositories/${repoId}`);\r\n        this.repository = response.data;\r\n\r\n        // Adiciona o novo repositório ao localStorage\r\n        storedRepositories.push(this.repository);\r\n        localStorage.setItem('repositories', JSON.stringify(storedRepositories));\r\n      } catch (error) {\r\n        console.error('Erro ao buscar o repositório:', error);\r\n      }\r\n    }\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";AASA,OAAAA,iBAAA;AACA,OAAAC,KAAA;AAEA;EACAC,IAAA;EACAC,UAAA;IACAH;EACA;EACAI,KAAA;IACA;MACAC,UAAA;MACAC,MAAA;MACAC,YAAA;IACA;EACA;EACA,MAAAC,QAAA;IACA,MAAAC,MAAA,QAAAC,MAAA,CAAAC,MAAA,CAAAC,EAAA;IACA,MAAAC,kBAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAC,YAAA,CAAAC,OAAA;IACA,KAAAZ,UAAA,GAAAQ,kBAAA,CAAAK,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAAP,EAAA,KAAAQ,MAAA,CAAAX,MAAA;IAEA,UAAAJ,UAAA;MACA;QACA,MAAAgB,QAAA,SAAApB,KAAA,CAAAqB,GAAA,wCAAAb,MAAA;QACA,KAAAJ,UAAA,GAAAgB,QAAA,CAAAjB,IAAA;;QAEA;QACAS,kBAAA,CAAAU,IAAA,MAAAlB,UAAA;QACAW,YAAA,CAAAQ,OAAA,iBAAAV,IAAA,CAAAW,SAAA,CAAAZ,kBAAA;MACA,SAAAa,KAAA;QACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;MACA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}